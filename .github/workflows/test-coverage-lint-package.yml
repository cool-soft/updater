name: Test, coverage and lint package
on:
  [push, pull_request]
jobs:
  test-and-coverage-package:
    runs-on: ubuntu-latest
    env:
      COVERAGE_HTML_REPORT_PATH: /tmp/coverage_html_report
      COVERAGE_XML_REPORT_PATH: /tmp/coverage_xml_report.xml
      PYTEST_REPORT_PATH: /tmp/pytest_report.html
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v2
      - name: "Install python"
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          architecture: 'x64'
          cache: 'pip'
      - name: "Install project dependencies"
        run: pip install -r requirements.txt
      - name: "Install package"
        run: python -m pip install -e .
      - name: "Run tests and code coverage analysis"
        run: coverage run -m pytest --html=${{ env.PYTEST_REPORT_PATH }} --self-contained-html
      - name: "Generate code coverage html report"
        run: coverage html --directory ${{ env.COVERAGE_HTML_REPORT_PATH }}
      - name: "Archive pytest and coverage reports"
        uses: actions/upload-artifact@v2
        if: ${{!cancelled()}}
        with:
          name: "Test and coverage reports"
          path: |
            ${{ env.PYTEST_REPORT_PATH }}
            ${{ env.COVERAGE_HTML_REPORT_PATH }}
      - name: "Generate code coverage xml report"
        run: coverage xml -o ${{ env.COVERAGE_XML_REPORT_PATH }}
      - name: "Push coverage xml report to codacy"
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_API_TOKEN }}
          coverage-reports: ${{ env.COVERAGE_XML_REPORT_PATH }}

  run-codacy-analisis-cli:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v2
      - name: "Run Codacy Analysis CLI"
        uses: codacy/codacy-analysis-cli-action@master
        with:
          api-token: ${{ secrets.CODACY_API_TOKEN }}
          upload: true
          max-allowed-issues: 2147483647